import{_ as t,r as p,o as e,c as o,a as n,b as s,d as c,e as l}from"./app-3a979dd6.js";const i={},u=n("h2",{id:"_1-用法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-用法","aria-hidden":"true"},"#"),s(" 1. 用法")],-1),r={href:"https://cn.vuejs.org/api/application.html#app-use",target:"_blank",rel:"noopener noreferrer"},k=l(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>plugin<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>第一个参数应是插件本身，可选的第二个参数是要传递给插件的选项。 插件可以是一个带  <code>install()</code>  方法的对象，亦或直接是一个将被用作  <code>install()</code>  方法的函数。插件选项 (<code>app.use()</code>  的第二个参数) 将会传递给插件的  <code>install()</code>  方法。 若  <code>app.use()</code>  对同一个插件多次调用，该插件只会被安装一次</p></blockquote><p>谈谈我的理解：</p><ol><li>方法第一个参数为<code>plugin</code>对象，剩余参数传入给<code>plugin</code>的<code>install</code>方法调用</li><li><code>plugin</code>对象内部需定义一个<code>install</code>方法，第一个参数为<code>Vue</code>，剩余参数由上边传递过来</li><li>若<code>plugin</code>本身定义为为一个函数，那么将被作为<code>install</code>方法调用</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 注册全局toster组件</span>
<span class="token keyword">import</span> Toster <span class="token keyword">from</span> <span class="token string">&#39;@/components/toster.vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> gTosterPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Vue<span class="token punctuation">.</span><span class="token function">components</span><span class="token punctuation">(</span><span class="token string">&#39;Toster&#39;</span><span class="token punctuation">,</span> Toster<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>gTosterPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 会调用gTosterPlugin.install方法并将this（即Vue）作为第一个参数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-实现" tabindex="-1"><a class="header-anchor" href="#_2-实现" aria-hidden="true">#</a> 2. 实现</h2><p><strong>Talk is cheap, show me the code</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function-variable function">use</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plugin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> installedPlugins <span class="token operator">=</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_installledPlugins <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_installledPlugins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 已注册plugin列表</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>installedPlugins<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>plugin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// 已注册</span>
    <span class="token keyword">let</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 有传入参数的情况：Vue.use(plugin, arg1, arg2)</span>
    args<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Vue, arg1, arg2]</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> plugin<span class="token punctuation">.</span>install <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span>
        plugin<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>plugin<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// install(Vue, arg1, arg2)</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> plugin <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token function">plugin</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// plugin本身作为install函数调用</span>
    installedPlugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>plugin<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 添加到已注册插件列表，避免重复注册</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function d(v,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[s("引用官方说法"),c(a)])]),k])}const h=t(i,[["render",d],["__file","Vue.useyuanliheshixian.html.vue"]]);export{h as default};
