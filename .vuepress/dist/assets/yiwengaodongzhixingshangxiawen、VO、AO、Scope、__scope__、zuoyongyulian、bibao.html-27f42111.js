import{_ as n,o as s,c as a,e as p}from"./app-3a979dd6.js";const t={},o=p(`<h2 id="_0-写在开头" tabindex="-1"><a class="header-anchor" href="#_0-写在开头" aria-hidden="true">#</a> 0. 写在开头</h2><p>本文将秉承<strong>talk is cheap, show me the code</strong>原则，争取将<code>执行上下文</code>、<code>VO</code>、<code>AO</code>、<code>Scope</code>、<code>[[scope]]</code>、<code>作用域</code>、<code>作用域链</code>这些晦涩抽象的概念用<code>伪代码</code>的形式来清晰表述出来，用以强化理解和记忆。</p><p>若有写的不对的地方，还请大佬们在评论区批评指正!</p><p>那么，让我们开始吧~</p><h2 id="_1-执行上下文" tabindex="-1"><a class="header-anchor" href="#_1-执行上下文" aria-hidden="true">#</a> 1. 执行上下文</h2><p>JS 引擎在执行一段代码前，会先创建对应的<code>执行上下文</code>(<code>EC</code>，Execution Context)，该执行上下文负责存储<code>VO</code>、<code>AO</code>、<code>Scope</code>、<code>this</code>。同时也创建<code>执行上下文栈</code>(<code>ECStack</code>，Execution Context Stack)来管理执行上下文的推入和弹出</p><p>不多 BB，来看代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 创建执行上下文</span>
globalEC <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
fn1EC <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
fn2EC <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
<span class="token comment">// 在执行fn1()前，先按顺序将执行上下文推入栈</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>globalEC<span class="token punctuation">)</span> <span class="token comment">// globalEC即全局上下文</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn1EC<span class="token punctuation">)</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn2EC<span class="token punctuation">)</span>

<span class="token comment">// 执行完毕，出栈</span>
ECStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 弹出fn2EC并销毁</span>
ECStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 弹出fn1EC并销毁</span>
<span class="token comment">// globalEC会一直保留，直到程序退出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-vo" tabindex="-1"><a class="header-anchor" href="#_2-vo" aria-hidden="true">#</a> 2. VO</h2><p><code>VO</code>即 Variable Object 变量对象，仅定义在<code>全局执行上下文</code>(<code>globalEC</code>)中，存储<code>全局变量</code>和<code>函数</code></p><p>来看代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

<span class="token comment">// globalEC</span>
globalEC <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">VO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">obj</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-ao" tabindex="-1"><a class="header-anchor" href="#_3-ao" aria-hidden="true">#</a> 3. AO</h2><p><code>AO</code>即 Activation Object 活跃对象，定义在函数执行上下文(<code>fnEC</code>)中（准确来说，在函数开始执行前才创建），存储<code>局部变量</code>和<code>子函数</code>以及<code>arguments</code></p><p>不多 BB，来看代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token keyword">var</span> <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token number">4</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 10</span>

<span class="token comment">// fn函数开始执行前，创建fnEC</span>
fnEC <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token string-property property">&#39;0&#39;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;1&#39;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">2</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fn2</span><span class="token operator">:</span><span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 将fnEC推入执行上下文栈</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fnEC<span class="token punctuation">)</span> <span class="token comment">// [globalEC,fnEC]</span>

<span class="token comment">// fn函数执行的过程中慢慢填装AO</span>
fnEC <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn2</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 执行内部函数fn2，也是如此</span>
fn2EC <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 将fn2EC推入栈</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn2EC<span class="token punctuation">)</span> <span class="token comment">// [globalEC,fnEC,fn2EC]</span>

<span class="token comment">// 执行fn2结束</span>
ECStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// fn2EC销毁</span>
<span class="token comment">// 执行fn结束</span>
ECStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// fnEC销毁</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-scope" tabindex="-1"><a class="header-anchor" href="#_4-scope" aria-hidden="true">#</a> 4. Scope</h2><p><code>Scope</code>定义在<code>执行上下文</code>中，就是所谓的<code>作用域</code>，存储在其中的一个个<code>AO</code>和<code>VO</code>按队列顺序链接成了所谓的<code>作用域链</code>，记忆为<code>作用域就是Scope，作用域链就是Scope的链结构</code></p><p><code>[[scope]]</code>在函数<code>创建</code>时定义在<code>函数</code>中，保存当前所处执行上下文的<code>Scope</code>；若当前执行上下文是<code>globalEC</code>，那么保存的是当前全局执行上下文的<code>VO</code>，记忆为<code>[[scope]]保存函数创建时所处执行上下文的Scope</code></p><p><code>Scope</code>、<code>[[scope]]</code>二者关系如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fnEC<span class="token punctuation">.</span>Scope <span class="token operator">=</span> <span class="token punctuation">[</span> fnEC<span class="token punctuation">.</span><span class="token constant">AO</span> <span class="token punctuation">,</span><span class="token operator">...</span>fn<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>文字介绍比较晦涩，所以不多 bb，写代码就完事了</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span>
  <span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token number">3</span>
    <span class="token keyword">function</span> <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>
  <span class="token punctuation">}</span>
  <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 创建fn函数时，定义fn.[[scope]]</span>
fn<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>globalEC<span class="token punctuation">.</span><span class="token constant">VO</span><span class="token punctuation">]</span>
<span class="token comment">// 执行fn函数，在其内部创建fn2函数时，定义fn2.[[scope]]</span>
fn2<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> fnEC<span class="token punctuation">.</span>Scope <span class="token operator">=</span> <span class="token punctuation">[</span>fnEC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span> <span class="token operator">...</span>fn<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span>
<span class="token comment">// 执行fn2函数，在其内部创建fn3函数时，定义fn3.[[scope]]</span>
fn3<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> fn2EC<span class="token punctuation">.</span>Scope <span class="token operator">=</span> <span class="token punctuation">[</span>fn2EC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span><span class="token operator">...</span>fn2<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token comment">// [fn2EC.AO, fn1EC.AO, globalEC.VO]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不多 BB，继续 coding，这次串联上前面介绍的<code>EC</code>、<code>ECStack</code>、<code>VO</code>、<code>AO</code>、<code>[[scope]]</code>，只要搞懂了这些，作用域、作用域链、作用域链查询这些概念就是小 case</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 执行代码如下</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">function</span> <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token parameter">b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter">b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token number">8</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// 输出: 0  1,7,8,4</span>

<span class="token comment">// 咳咳... 那么重头戏来了</span>
<span class="token comment">// 这段代码详细执行过程分析如下（建议把上述执行的代码截图，对照着看以下的伪代码分析过程）</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>globalEC<span class="token punctuation">)</span> <span class="token comment">// 推入全局执行上下文</span>

globalEC<span class="token punctuation">.</span><span class="token constant">VO</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// VO存储a</span>
globalEC<span class="token punctuation">.</span><span class="token constant">VO</span><span class="token punctuation">.</span><span class="token function-variable function">fn3</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// VO存储fn3</span>
fn3<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>globalEC<span class="token punctuation">.</span><span class="token constant">VO</span><span class="token punctuation">]</span> <span class="token comment">// fn3创建时定义[[scope]]</span>

globalEC<span class="token punctuation">.</span><span class="token constant">VO</span><span class="token punctuation">.</span><span class="token function-variable function">fn1</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
fn1<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>globalEC<span class="token punctuation">.</span><span class="token constant">VO</span><span class="token punctuation">]</span>

fn1EC <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// 在执行fn前创建fnEC</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&#39;0&#39;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string-property property">&#39;1&#39;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string-property property">&#39;2&#39;</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn2</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Scope</span><span class="token operator">:</span><span class="token punctuation">[</span> fn1EC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span> <span class="token operator">...</span>fn1<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn1EC<span class="token punctuation">)</span> <span class="token comment">// 推入fnEC [globalEC, fn1EC]</span>

fn1<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// 执行let a = 1才会给AO中的a赋值</span>

fn3EC <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// 执行fn3前创建fn3EC</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Scope</span><span class="token operator">:</span><span class="token punctuation">[</span> fn3EC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span> <span class="token operator">...</span>fn3<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token comment">// [ fn3EC.AO, globalEC.VO ]</span>
<span class="token punctuation">}</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn3EC<span class="token punctuation">)</span> <span class="token comment">// 推入fn3EC [globalEC, fn1EC, fn3EC]</span>

<span class="token comment">// 执行console.log(a)，会从当前执行上下文即fn3EC内部的Scope查询，</span>
<span class="token comment">// 沿着作用域链逐级往上查找a</span>
fn3EC<span class="token punctuation">.</span>Scope<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">scope</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>scope<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>scope<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 找到的是: globalEC.VO.a即0</span>
    <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

ECSTack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// fn3EC销毁，[globalEC, fn1EC]</span>

fn2<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> fn1EC<span class="token punctuation">.</span>Scope <span class="token comment">// 创建fn2时定义[[scope]]</span>
fn2EC <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// 执行fn2前创建执行上下文</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;0&#39;</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">,</span>
    <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Scope</span><span class="token operator">:</span><span class="token punctuation">[</span> fn2EC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span> <span class="token operator">...</span>fn2<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token comment">// [fn2EC.AO,fn1EC.AO,globalEC.VO]</span>
<span class="token punctuation">}</span>
ECStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn2EC<span class="token punctuation">)</span> <span class="token comment">// [globalEC, fn1EC, fn2EC]</span>
fn2EC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">8</span>
<span class="token comment">// 执行console.log(a,b,c,d),从当前执行上下文即fn2EC的Scope查询</span>
fn2EC<span class="token punctuation">.</span>Scope<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">scope</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>scope<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>scope<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 找到的是: fn1EC.AO.a即1</span>
    <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 依此类推</span>
  <span class="token comment">// 找到 fn2EC.AO.b即7</span>
  <span class="token comment">// 找到 fn2EC.AO.c即8</span>
  <span class="token comment">// 找到 fn1EC.AO.d即4</span>
<span class="token punctuation">)</span>

ECStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 销毁fn2EC, [globalEC, fn1EC]</span>
ECStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 销毁fn1EC， [globalEC]</span>

<span class="token comment">// 直到用户关闭当前页面，globalEC销毁，ECStack也销毁</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-闭包" tabindex="-1"><a class="header-anchor" href="#_5-闭包" aria-hidden="true">#</a> 5. 闭包</h2><p>在搞懂了前面的东西，那么理解闭包就是信手拈来，其本质上就是<code>返回的内部函数的[[scope]]保存了外部函数的Scope</code>， 不多 bb，来看代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> fn2
<span class="token punctuation">}</span>
<span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1,2</span>

<span class="token comment">// 执行fn1函数,在创建fn2时，会定义fn2.[[scope]]</span>
fn2<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> fn1EC<span class="token punctuation">.</span>Scope <span class="token comment">// [...fn1EC.AO,...globleEC.VO]</span>

<span class="token comment">// fn1执行完毕，将fn2 return出去，这时候fn=fn2 --&gt; fn.[[scope]] = fn2.[[scope]]，</span>
<span class="token comment">// 故fn2的[[scope]]保留了下来，在执行fn时可以访问fn1EC.Scope</span>
<span class="token comment">// 在执行fn时，创建的执行上下文是这样的</span>
fnEC <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span>
  <span class="token punctuation">}</span>
  <span class="token literal-property property">Scope</span><span class="token operator">:</span><span class="token punctuation">[</span>fnEC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span> <span class="token operator">...</span>fn<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token comment">// [fnEC.AO, fn1EC.AO, globalEC.VO]</span>
<span class="token punctuation">}</span>
<span class="token comment">// 通过fn1EC.AO可以访问fn1函数内部的变量a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再来看一个老掉牙的闭包面试题</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>
data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>

<span class="token comment">// 我们来分析data[1]，对于父函数a有</span>
a<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span> globalEC<span class="token punctuation">.</span><span class="token constant">VO</span> <span class="token punctuation">]</span>
aEC <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// 注意每次循环父函数a都不一样</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&#39;0&#39;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">i</span><span class="token operator">:</span><span class="token number">1</span> <span class="token comment">// 这里保存了i=1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Scope</span><span class="token operator">:</span><span class="token punctuation">[</span> aEC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span> <span class="token operator">...</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// 对于return的b函数有</span>
b<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> aEC<span class="token punctuation">.</span>Scope <span class="token operator">=</span> <span class="token punctuation">[</span> aEC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span> globalEC<span class="token punctuation">.</span><span class="token constant">VO</span> <span class="token punctuation">]</span> <span class="token comment">// 保存了父函数a执行上下文的Scope</span>
bEC<span class="token operator">=</span><span class="token punctuation">{</span>
  <span class="token constant">AO</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">arguments</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Scope</span><span class="token operator">:</span><span class="token punctuation">[</span> bEC<span class="token punctuation">.</span><span class="token constant">AO</span><span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">[</span>scope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token comment">// 这时i变量从aEC.AO中获取</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","yiwengaodongzhixingshangxiawen、VO、AO、Scope、__scope__、zuoyongyulian、bibao.html.vue"]]);export{k as default};
