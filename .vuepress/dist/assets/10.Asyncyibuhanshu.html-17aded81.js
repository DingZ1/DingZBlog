const e=JSON.parse('{"key":"v-08ef34ff","path":"/blogs/study/es6/10.Asyncyibuhanshu.html","title":"10. Async异步函数","lang":"en-US","frontmatter":{"title":"10. Async异步函数","author":"定子","date":"2022-02-20","categories":["ES6"],"tags":["ES6"]},"headers":[{"level":2,"title":"1. Async 函数介绍","slug":"_1-async-函数介绍","link":"#_1-async-函数介绍","children":[]},{"level":2,"title":"2. Async 函数基本用法","slug":"_2-async-函数基本用法","link":"#_2-async-函数基本用法","children":[]},{"level":2,"title":"3. async 声明方式","slug":"_3-async-声明方式","link":"#_3-async-声明方式","children":[]},{"level":2,"title":"4. async 本质上是 Promise","slug":"_4-async-本质上是-promise","link":"#_4-async-本质上是-promise","children":[]},{"level":2,"title":"5. await 命令后面若是thenable对象，会将其视为 Promise 处理，调用其 then 方法并接收其 resolve 函数的参数","slug":"_5-await-命令后面若是thenable对象-会将其视为-promise-处理-调用其-then-方法并接收其-resolve-函数的参数","link":"#_5-await-命令后面若是thenable对象-会将其视为-promise-处理-调用其-then-方法并接收其-resolve-函数的参数","children":[]},{"level":2,"title":"6. await 命令后面的 Promise 对象处于 reject 状态时，会立即中断执行，并抛错传入 catch 回调函数","slug":"_6-await-命令后面的-promise-对象处于-reject-状态时-会立即中断执行-并抛错传入-catch-回调函数","link":"#_6-await-命令后面的-promise-对象处于-reject-状态时-会立即中断执行-并抛错传入-catch-回调函数","children":[]},{"level":2,"title":"7. 良好实践","slug":"_7-良好实践","link":"#_7-良好实践","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/study/es6/10.Async异步函数.md"}');export{e as data};
