import{_ as t,r as o,o as p,c,a as n,b as a,d as e,e as r}from"./app-3a979dd6.js";const l={},i=r(`<p>new 会执行当前的构造函数，并且加入一些语法糖操作：</p><ol><li>将 this 指向新创建的 obj</li><li><code>obj.__proto__</code>指向构造函数的 prototype</li><li>执行构造函数，若这个构造函数没有 return 一个对象则默认 return 这个 obj</li></ol><p><strong>Talk is cheap, show me the code</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token parameter">constructor<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// let o = new Object()</span>
  <span class="token comment">// o.__proto__ = constructor.prototype</span>
  <span class="token keyword">let</span> o <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>constructor<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// 一行取代两行</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> res <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> res <span class="token operator">:</span> o
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,5),u={href:"https://zhuanlan.zhihu.com/p/23987456",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/mqyqingfeng/Blog/issues/13",target:"_blank",rel:"noopener noreferrer"};function k(_,h){const s=o("ExternalLinkIcon");return p(),c("div",null,[i,n("p",null,[n("a",u,[a("1. JS 的 new 到底是干什么的？"),e(s)])]),n("p",null,[n("a",d,[a("2. new 的模拟实现"),e(s)])])])}const v=t(l,[["render",k],["__file","newlijieheshixian.html.vue"]]);export{v as default};
