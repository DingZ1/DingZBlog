import{_ as a,r as t,o as e,c as p,a as n,b as o,d as c,e as i}from"./app-3a979dd6.js";const l={},u=i(`<h2 id="_1-eventdispatch" tabindex="-1"><a class="header-anchor" href="#_1-eventdispatch" aria-hidden="true">#</a> 1. EventDispatch</h2><p><code>EventDispatch</code>即事件调度，实际上应用了<code>订阅发布</code>模式，有四个功能：</p><ol><li>添加订阅者：<code>addEventListener(event, listener)</code></li><li>删除订阅者：<code>removeEventListener(event, listener)</code></li><li>调用事件：<code>dispatchEvent(event)</code></li><li>查询对象是否订阅了事件：<code>hasEventListener(event, listener)</code></li></ol><h2 id="_2-实现代码" tabindex="-1"><a class="header-anchor" href="#_2-实现代码" aria-hidden="true">#</a> 2. 实现代码</h2><p><strong>talk is cheap, show me the code</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">EventDispatcher</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>listeners <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 事件订阅控制器</span>
    <span class="token punctuation">}</span>
    <span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> listener</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> listeners <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">)</span> listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 建立事件订阅队列</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">)</span>
            listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向队列添加事件订阅者</span>
    <span class="token punctuation">}</span>
    <span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> listener</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> listenerQueue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> idx <span class="token operator">=</span> listenerQueue<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        idx <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> listenerQueue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 移除事件订阅者</span>
    <span class="token punctuation">}</span>
    <span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> listenerQueue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> listener <span class="token keyword">of</span> listenerQueue<span class="token punctuation">)</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通知事件的每一个订阅者</span>
    <span class="token punctuation">}</span>
    <span class="token function">hasEventListener</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> listener</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> listeners <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">;</span>

        <span class="token keyword">return</span> listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> listeners<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// test</span>
<span class="token keyword">let</span> eventDispatcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">cb1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">cb2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
eventDispatcher<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;event1&#39;</span><span class="token punctuation">,</span> cb1<span class="token punctuation">)</span><span class="token punctuation">;</span>
eventDispatcher<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;event1&#39;</span><span class="token punctuation">,</span> cb2<span class="token punctuation">)</span><span class="token punctuation">;</span>

eventDispatcher<span class="token punctuation">.</span>events<span class="token punctuation">;</span> <span class="token comment">// { event1: [ cb1, cb2 ] }</span>
eventDispatcher<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&#39;event1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 2</span>
eventDispatcher<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;event1&#39;</span><span class="token punctuation">,</span> cb1<span class="token punctuation">)</span><span class="token punctuation">;</span>
eventDispatcher<span class="token punctuation">.</span><span class="token function">hasEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;event1&#39;</span><span class="token punctuation">,</span> cb1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
eventDispatcher<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&#39;event1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,7),k={href:"https://github.com/mrdoob/three.js/blob/master/src/core/EventDispatcher.js",target:"_blank",rel:"noopener noreferrer"};function r(d,v){const s=t("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[n("a",k,[o("three/core/EventDispatcher.js"),c(s)])])])}const b=a(l,[["render",r],["__file","EventDispatchshixian.html.vue"]]);export{b as default};
